2/18 
we cannot use binary search to gain LFS solutions. When a solution is rejected, you don't know if you should increase or decrease the guess. e.g. a constant-value mana stream enters a focuser. 

what we really need is the least F-closed superposition.
x: the superposition guess.
F: eval the mana flow given the guess. 
F(x) yields the entry mana for all focusers. 
if F(x) <= x for all focusers, then accept. 
My hope: if x_0 is accepted, then any x_1 > x_0 is also accepted. 

and OMG, the stochastic gem has focuser capability. 
I noticed this when the static analysis entered a dead loop. 
Solution: Allow this! enhance the analyzer to treat stochastic gems as unknowns.
Let's leave the fosuer available, so that the puzzle is not too difficult (to create inf). 

2/20
The way we assume each unknown source to be the same skips least solutions. 
e.g. putting a focuser before a *w gem rejects w and yields 2^w. 
Change the search to an iterative stabalization of a simplest vector?

2/21
9d923b523f88cb755dd0dd16cc24a9347b2be6c4
world background shader: give up pixelated movement, using smooth
